#!/bin/zsh

# TODO: Make 'update' alias available on path (move ~/update.sh to /usr/bin/update)
alias pyc='find ./ -name "*.pyc" -print'
alias rmpyc='find ./ -name "*.pyc" -delete'
alias v='vim'
alias nv='nvim'
alias tslines='find ./ -path "*.ts" -type f | xargs wc -l'
alias pylines='find ./ -path "*.py" -type f | xargs wc -l'
alias clines='find ./ -path "*.c" -type f | xargs wc -l'
alias phplines='find ./ -path "*.php" -type f | xargs wc -l'
alias jslines='find ./ -path "*.js" -type f | xargs wc -l'
alias jsxlines='find ./ -path "*.jsx" -type f | xargs wc -l'
alias rmswp='find . -type f -name "*.sw[klmnop]" -delete'
alias fatodos='grep -r "# TODO" .'
alias fabad='grep -r "# XXX" .'
alias c='clear'
alias maxg-dev="docker exec -it $(docker ps | grep maxg_dev | awk '{print $1}') bash"
alias gmtm='git mergetool --no-prompt --tool=meld'
alias gbd='git rev-list --left-right --count'
alias mta='make test:all'
alias mtu='make test:unit'
alias mtf='make test:func'
alias cmf='cat -etv'
alias rf8="flake8 . --exclude=*/migrations,*/*/migrations,*/__init__.py --max-line-length=100 | nl"
alias maxima="exec '/Applications/Maxima.app/Contents/Resources/maxima.sh'"
alias ctags="`brew --prefix`/bin/ctags"
alias python='python3'
alias cpython="sudo make -s -j4 && python3 -c \"print('-' * 80 + '\n')\" && ./python.exe"
alias ducks="du -cksh * | sort -hr | head -n 15"
alias showjava="/usr/libexec/java_home -V"
alias battery="system_profiler SPPowerDataType"
alias time="/usr/bin/time"
alias vimsw='find . -type f -name "*.sw*"'
alias rmvimsw='find . -type f -name "*.sw*" -delete'
# alias remotevim="vim -c ':source scp://$USER@$(nslookup mach_name | head -1 | awk '{ print $2  }')//$HOME/.vimrc'"

# TODO: Add integer returned by this to zsh prompt (uncommitted lines changed)
# Battery percentage on right side?
# alias gchl="git diff --numstat |  cut -d$'\t' -f 1 | paste -sd+ - | bc"
function gchl() {
    if [[ $1 == "--conf" ]] || [[ $1 == "-c" ]] ; then
        GIT=conf
    elif [[ $1 == "" ]]; then
        GIT=git
    else
        echo "ERROR: Invalid argument(s)."
        return;
    fi

    NUM=$($GIT diff --numstat |  cut -d$'\t' -f 1 | paste -sd+ - | bc)
	if [[ $NUM ]]; then
        echo "$NUM lines changed."
    else
        echo "0 lines changes."
    fi
}

# Add yaml validator, takes path to yaml file as input
function yaml() {
    ruby -e "require 'yaml';puts YAML.load_file('$1')"
}
